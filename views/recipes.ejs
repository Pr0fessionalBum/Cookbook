<%- include('partials/header') %>

<div class="recipes-container">
    <div class="search-section">
        <div class="search-box">
            <input type="text" id="recipe-search" placeholder="Search recipes..." class="search-input">
            <div class="search-options">
                <label>
                    <input type="checkbox" id="search-ingredients" checked>
                    Search ingredients
                </label>
                <label>
                    <input type="checkbox" id="search-names" checked>
                    Search recipe names
                </label>
            </div>
        </div>
    </div>

    <div id="recipe-categories">
        <% for (const category in categorizedRecipes) { %>
            <div class="category-section" data-category="<%= category %>">
                <h2><%= category %></h2>
                <div class="recipe-grid">
                    <% categorizedRecipes[category].forEach(recipe => { %>
                        <div class="recipe-card" 
                             data-recipe-name="<%= recipe.name.toLowerCase() %>"
                             data-recipe-ingredients="<%= recipe.ingredient_names ? recipe.ingredient_names.toLowerCase() : '' %>">
                            <h3><%= recipe.name %></h3>
                            <% if (recipe.ingredient_names) { %>
                                <p class="ingredients">
                                    <strong>Ingredients:</strong> 
                                    <%= recipe.ingredient_names %>
                                </p>
                            <% } %>
                            <a href="/recipe/<%= recipe.id %>" class="view-recipe-btn">View Recipe</a>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% } %>
    </div>

    <div id="no-results" class="no-results" style="display: none;">
        <p>No recipes found matching your search.</p>
    </div>
</div>

<style>
.recipes-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

.search-section {
    margin: 0 auto 30px;
    display: flex;
    justify-content: center;
    width: 100%;
    max-width: 1200px;
    padding: 0 20px;
}

.search-box {
    width: 100%;
    max-width: 600px;
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 15px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.search-input {
    width: 100%;
    padding: 12px;
    font-size: 16px;
    border: 2px solid #ddd;
    border-radius: 6px;
    margin-bottom: 10px;
    transition: border-color 0.3s ease;
}

.search-input:focus {
    border-color: #3498db;
    outline: none;
}

.search-options {
    display: flex;
    gap: 20px;
    justify-content: center;
}

.search-options label {
    display: flex;
    align-items: center;
    gap: 5px;
    color: #555;
    cursor: pointer;
}

.category-section {
    margin-bottom: 40px;
}

.category-section h2 {
    color: #2c3e50;
    padding-bottom: 10px;
    border-bottom: 2px solid #3498db;
    margin-bottom: 20px;
}

.recipe-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 20px;
    margin-top: 15px;
}

.recipe-card {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 15px rgba(0,0,0,0.1);
    transition: transform 0.2s ease;
}

.recipe-card:hover {
    transform: translateY(-5px);
}

.recipe-card h3 {
    color: #2c3e50;
    margin-bottom: 10px;
    font-size: 1.2em;
}

.recipe-card .ingredients {
    color: #666;
    font-size: 0.9em;
    margin-bottom: 15px;
    line-height: 1.4;
}

.view-recipe-btn {
    display: inline-block;
    background: #3498db;
    color: white;
    padding: 8px 16px;
    border-radius: 5px;
    text-decoration: none;
    transition: background 0.3s ease;
}

.view-recipe-btn:hover {
    background: #2980b9;
}

.no-results {
    text-align: center;
    padding: 40px;
    background: white;
    border-radius: 10px;
    box-shadow: 0 2px 15px rgba(0,0,0,0.1);
    margin-top: 20px;
}

.no-results p {
    color: #666;
    font-size: 1.2em;
}

@media (max-width: 768px) {
    .recipe-grid {
        grid-template-columns: 1fr;
    }
    
    .search-options {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('recipe-search');
    const searchIngredients = document.getElementById('search-ingredients');
    const searchNames = document.getElementById('search-names');
    const recipeCards = document.querySelectorAll('.recipe-card');
    const categorySections = document.querySelectorAll('.category-section');
    const noResults = document.getElementById('no-results');

    function searchRecipes() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        let visibleRecipes = 0;
        const visibleCategories = new Set();

        recipeCards.forEach(card => {
            const recipeName = card.dataset.recipeName;
            const recipeIngredients = card.dataset.recipeIngredients;
            let isVisible = false;

            if (searchTerm === '') {
                isVisible = true;
            } else {
                if (searchNames.checked && recipeName.includes(searchTerm)) {
                    isVisible = true;
                }
                if (searchIngredients.checked && recipeIngredients.includes(searchTerm)) {
                    isVisible = true;
                }
            }

            card.style.display = isVisible ? '' : 'none';
            if (isVisible) {
                visibleRecipes++;
                visibleCategories.add(card.closest('.category-section').dataset.category);
            }
        });

        categorySections.forEach(section => {
            const hasVisibleRecipes = visibleCategories.has(section.dataset.category);
            section.style.display = hasVisibleRecipes ? '' : 'none';
        });

        noResults.style.display = visibleRecipes === 0 ? '' : 'none';
    }

    searchInput.addEventListener('input', searchRecipes);
    searchIngredients.addEventListener('change', searchRecipes);
    searchNames.addEventListener('change', searchRecipes);
});
</script>

<%- include('partials/footer') %>